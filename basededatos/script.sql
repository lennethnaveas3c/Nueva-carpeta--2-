-- MySQL Script generated by MySQL Workbench
-- Thu Mar  6 10:26:01 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`usuarios` (
  `id_usuarios` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido` VARCHAR(45) NOT NULL,
  `fecha_nacimiento` DATETIME NOT NULL,
  PRIMARY KEY (`id_usuarios`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`tipo_de_usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tipo_de_usuario` (
  `id_tipo_de_usuario` INT NOT NULL AUTO_INCREMENT,
  `usuarios_id_usuarios` INT NOT NULL,
  PRIMARY KEY (`id_tipo_de_usuario`),
  CONSTRAINT `fk_tipo_de_usuario_usuarios1`
    FOREIGN KEY (`usuarios_id_usuarios`)
    REFERENCES `mydb`.`usuarios` (`id_usuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_tipo_de_usuario_usuarios1_idx` ON `mydb`.`tipo_de_usuario` (`usuarios_id_usuarios` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`medicos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`medicos` (
  `id_medicos` INT NOT NULL AUTO_INCREMENT,
  `consultorio` VARCHAR(45) NOT NULL,
  `especialidad` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_medicos`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`administrativos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`administrativos` (
  `id_administrativos` INT NOT NULL AUTO_INCREMENT,
  `medicos_id_medicos` INT NOT NULL,
  `usuarios_id_usuarios` INT NOT NULL,
  PRIMARY KEY (`id_administrativos`),
  CONSTRAINT `fk_administrativos_medicos1`
    FOREIGN KEY (`medicos_id_medicos`)
    REFERENCES `mydb`.`medicos` (`id_medicos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_administrativos_usuarios1`
    FOREIGN KEY (`usuarios_id_usuarios`)
    REFERENCES `mydb`.`usuarios` (`id_usuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_administrativos_medicos1_idx` ON `mydb`.`administrativos` (`medicos_id_medicos` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_administrativos_usuarios1_idx` ON `mydb`.`administrativos` (`usuarios_id_usuarios` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`pacientes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`pacientes` (
  `id_pacientes` INT NOT NULL AUTO_INCREMENT,
  `numero_paciente` VARCHAR(45) NOT NULL,
  `numero_habitacion` VARCHAR(45) NOT NULL,
  `tratamiento` VARCHAR(45) NOT NULL,
  `medicos_id_medicos` INT NOT NULL,
  `numero de telefono` VARCHAR(45) NOT NULL,
  `administrativos_id_administrativos` INT NOT NULL,
  `usuarios_id_usuarios` INT NOT NULL,
  PRIMARY KEY (`id_pacientes`),
  CONSTRAINT `fk_pacientes_medicos`
    FOREIGN KEY (`medicos_id_medicos`)
    REFERENCES `mydb`.`medicos` (`id_medicos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pacientes_administrativos1`
    FOREIGN KEY (`administrativos_id_administrativos`)
    REFERENCES `mydb`.`administrativos` (`id_administrativos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pacientes_usuarios1`
    FOREIGN KEY (`usuarios_id_usuarios`)
    REFERENCES `mydb`.`usuarios` (`id_usuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_pacientes_medicos_idx` ON `mydb`.`pacientes` (`medicos_id_medicos` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_pacientes_administrativos1_idx` ON `mydb`.`pacientes` (`administrativos_id_administrativos` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_pacientes_usuarios1_idx` ON `mydb`.`pacientes` (`usuarios_id_usuarios` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`citas_medicas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`citas_medicas` (
  `id_citas_medicas` INT NOT NULL AUTO_INCREMENT,
  `fecha` DATETIME NOT NULL,
  `motivo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_citas_medicas`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`historial_medico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`historial_medico` (
  `id_historial_medico` INT NOT NULL AUTO_INCREMENT,
  `medicacion` VARCHAR(45) NOT NULL,
  `pacientes_id_pacientes` INT NOT NULL,
  PRIMARY KEY (`id_historial_medico`),
  CONSTRAINT `fk_historial_medico_pacientes1`
    FOREIGN KEY (`pacientes_id_pacientes`)
    REFERENCES `mydb`.`pacientes` (`id_pacientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_historial_medico_pacientes1_idx` ON `mydb`.`historial_medico` (`pacientes_id_pacientes` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`pacientes_has_citas_medicas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`pacientes_has_citas_medicas` (
  `pacientes_id_pacientes` INT NOT NULL,
  `citas_medicas_id_citas_medicas` INT NOT NULL,
  CONSTRAINT `fk_pacientes_has_citas_medicas_pacientes1`
    FOREIGN KEY (`pacientes_id_pacientes`)
    REFERENCES `mydb`.`pacientes` (`id_pacientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pacientes_has_citas_medicas_citas_medicas1`
    FOREIGN KEY (`citas_medicas_id_citas_medicas`)
    REFERENCES `mydb`.`citas_medicas` (`id_citas_medicas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_pacientes_has_citas_medicas_citas_medicas1_idx` ON `mydb`.`pacientes_has_citas_medicas` (`citas_medicas_id_citas_medicas` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_pacientes_has_citas_medicas_pacientes1_idx` ON `mydb`.`pacientes_has_citas_medicas` (`pacientes_id_pacientes` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`medicos_has_pacientes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`medicos_has_pacientes` (
  `medicos_id_medicos` INT NOT NULL,
  `pacientes_id_pacientes` INT NOT NULL,
  `usuarios_id_usuarios` INT NOT NULL,
  CONSTRAINT `fk_medicos_has_pacientes_medicos1`
    FOREIGN KEY (`medicos_id_medicos`)
    REFERENCES `mydb`.`medicos` (`id_medicos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_medicos_has_pacientes_pacientes1`
    FOREIGN KEY (`pacientes_id_pacientes`)
    REFERENCES `mydb`.`pacientes` (`id_pacientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_medicos_has_pacientes_usuarios1`
    FOREIGN KEY (`usuarios_id_usuarios`)
    REFERENCES `mydb`.`usuarios` (`id_usuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_medicos_has_pacientes_pacientes1_idx` ON `mydb`.`medicos_has_pacientes` (`pacientes_id_pacientes` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_medicos_has_pacientes_medicos1_idx` ON `mydb`.`medicos_has_pacientes` (`medicos_id_medicos` ASC) VISIBLE;

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- Primero eliminar los registros relacionados en historial_medico (o una tabla equivalente)
DELETE FROM historial_medico WHERE pacientes_id_pacientes = 1;

-- Luego eliminar el tratamiento del paciente (en la tabla pacientes)
UPDATE pacientes SET tratamiento = NULL WHERE id_pacientes = 1;
